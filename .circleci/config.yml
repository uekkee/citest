version: 2
jobs:
  build:
    docker:
      - image: ruby:2.3.3
        environment:
          DB_HOST: 127.0.0.1
      - image: mysql:5.7
        environment:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
      - image: redis:3.2.9
    parallelism: 2
    working_directory: /my-app
    steps:
      - run: curl --output /usr/local/bin/phantomjs https://s3.amazonaws.com/circle-downloads/phantomjs-2.1.1
      - restore_cache:
          keys:
            - mecab
            - elasticsearch
      - run: if [[ ! -e mecab-0.996/src/mecab ]]; then wget -O mecab-0.996.tar.gz "https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7cENtOXlicTFaRUE" && tar xvzf mecab-0.996.tar.gz && cd mecab-0.996 && ./configure --enable-utf8-only && make ;fi
      - run: cd mecab-0.996 && make install && ldconfig
      - run: if [[ ! -e mecab-ipadic-2.7.0-20070801/sys.dic ]]; then wget -O mecab-ipadic-2.7.0-20070801.tar.gz "https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7MWVlSDBCSXZMTXM" && tar xvzf mecab-ipadic-2.7.0-20070801.tar.gz && cd mecab-ipadic-2.7.0-20070801 && ./configure --with-charset=utf8 && make ;fi
      - save_cache:
          key: mecab
          paths:
            - mecab-0.996
            - mecab-ipadic-2.7.0-20070801
      - run: cd mecab-ipadic-2.7.0-20070801 && make install
      - run: if [[ ! -e elasticsearch-2.3.2 ]]; then wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-2.3.2.tar.gz && tar -xvf elasticsearch-2.3.2.tar.gz && elasticsearch-2.3.2/bin/plugin install analysis-kuromoji && elasticsearch-2.3.2/bin/plugin install analysis-icu ;fi
      - save_cache:
          key: elasticsearch
          paths: elasticsearch-2.3.2
      - run: elasticsearch-2.3.2/bin/elasticsearch -d
      - run: sleep 10 && wget --waitretry=5 --retry-connrefused -v http://127.0.0.1:9200/
      - checkout
      - run: apt-get update -qq && apt-get install -y build-essential nodejs
      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile" }}
            # if cache for exact version of `Gemfile` is not present then load any most recent one
            - bundle
      - run: bundle install --path=vendor/bundle
      - save_cache:
          key: bundle-{{ checksum "Gemfile" }}
          paths: vendor/bundle
      - run: RAILS_ENV=test bundle exec rails db:create db:schema:load
      - run:
          name: RSpec
          command: |
            circleci tests glob \
            spec/models/**/*.rb \
            circleci tests split | \
            xargs bundle exec rspec
